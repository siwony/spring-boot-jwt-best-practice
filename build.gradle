plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'

    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

sonarqube {
    properties {
        property "sonar.projectKey", "siwony_spring-boot-jwt-best-practice"
        property "sonar.organization", "siwony"
        property "sonar.host.url", "https://sonarcloud.io"

        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.tests", "src/test"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/codeCoverageReport.xml"
    }
}

group = 'com.siwony'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//*** build script 분할 ***//
apply from: 'jacoco.gradle'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()

    finalizedBy 'jacocoTestCoverageVerification'
    finalizedBy 'jacocoTestReport'
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
